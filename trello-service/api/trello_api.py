import requests
from fastapi import APIRouter, HTTPException
from config import config,logger

router = APIRouter(prefix="/trello", tags=["Trello"])

TRELLO_AUTH = f"key={config.TRELLO_API_KEY}&token={config.TRELLO_TOKEN}"

# üèÅ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –∑–∞–¥–∞—á
@router.post("/create_card")
async def create_card(name: str, list_id: str):
    url = f"{config.TRELLO_API_URL}/cards?{TRELLO_AUTH}"
    data = {
        "name": name,
        "idList": list_id
    }
    response = requests.post(url, json=data)

    if response.status_code == 200:
        logger.info("‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ - trello")
        return {"message": "–ö–∞—Ä—Ç–æ—á–∫–∞ —Å–æ–∑–¥–∞–Ω–∞!", "card": response.json()}
    logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ - trello: {response.json()}")
    raise HTTPException(status_code=response.status_code, detail=response.json())

# üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –∫–∞—Ä—Ç–æ—á–µ–∫
@router.put("/update_card")
async def update_card(card_id: str, list_id: str):
    url = f"{config.TRELLO_API_URL}/cards/{card_id}?{TRELLO_AUTH}"
    data = {"idList": list_id}
    response = requests.put(url, json=data)

    if response.status_code == 200:
        logger.info("‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏ —Å—Ç–∞—Ç—É—Å - trello")
        return {"message": "–ö–∞—Ä—Ç–æ—á–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!", "card": response.json()}
    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ - trello: {response.json()}")
    raise HTTPException(status_code=response.status_code, detail=response.json())
