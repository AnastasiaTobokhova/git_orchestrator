from aiogram import Router, types, F
from aiogram.types import CallbackQuery
from . import github_handler, ci_cd_handler, trello_handler
from config import logger

router = Router()

# üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏
@router.callback_query(F.data)
async def callback_handler(callback: CallbackQuery):
    action = callback.data
    user_id = callback.from_user.id

    if action == "github_repos":
        logger.info(f"üìÇ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–ø–∏—Å–æ–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤")
        await github_handler.get_github_repos(callback.message)

    elif action.startswith("deploy_repo_"):
        repo_name = action.replace("deploy_repo_", "").strip()
        logger.info(f"üöÄ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—ã–±—Ä–∞–ª —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π {repo_name} –¥–ª—è –¥–µ–ø–ª–æ—è")
        await ci_cd_handler.trigger_github_actions(callback.message, repo_name=repo_name)
        await callback.answer(f"üöÄ –ó–∞–ø—É—Å–∫ GitHub Actions –¥–ª—è {repo_name}...")

    elif action == "ci_cd_status":
        logger.info(f"üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç–∞—Ç—É—Å —Å–±–æ—Ä–∫–∏")
        await ci_cd_handler.github_actions_status(callback.message)

    elif action == "ci_cd_logs":
        logger.info(f"üìù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª –ª–æ–≥–∏ —Å–±–æ—Ä–∫–∏")
        await ci_cd_handler.github_actions_logs(callback.message)

    elif action == "trello_create_card":
        logger.info(f"üèÅ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —Å–æ–∑–¥–∞—ë—Ç –∫–∞—Ä—Ç–æ—á–∫—É Trello")
        await trello_handler.trello_create_card(callback.message, repo_name="unknown", build_status="pending")

    elif action == "trello_update_card":
        logger.info(f"üîÑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É Trello")
        await trello_handler.trello_update_card(callback.message)

    await callback.answer()







