from aiogram import Router, types, F
from aiogram.filters import Command
import requests
from config import config, logger
import os

router = Router()

TRELLO_API_KEY = os.getenv("TRELLO_API_KEY")
TRELLO_TOKEN = os.getenv("TRELLO_TOKEN")
TRELLO_BOARD_ID = os.getenv("TRELLO_BOARD_ID")

# üèÅ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –∑–∞–¥–∞—á
@router.message(F.text == "/trello_create_card")
async def trello_create_card(message: types.Message, repo_name: str, build_status: str):
    url = "https://api.trello.com/1/cards"
    params = {
        "name": f"Deploy {repo_name}",
        "desc": f"–°—Ç–∞—Ç—É—Å: {build_status}",
        "idList": TRELLO_BOARD_ID,
        "key": TRELLO_API_KEY,
        "token": TRELLO_TOKEN
    }
    response = requests.post(url, params=params)

    if response.status_code == 200:
        await message.answer(f"‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ Trello —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è {repo_name}!")
    else:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ Trello: {response.json()}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ Trello.")

# üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –∫–∞—Ä—Ç–æ—á–µ–∫
@router.message(F.text == "/trello_update_card")
async def trello_update_card(message: types.Message):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ ID –∫–∞—Ä—Ç–æ—á–∫–∏ –∏ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å (—á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª):")

@router.message(F.text)
async def receive_card_status_update(message: types.Message):
    data = message.text.split()
    if len(data) < 2:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ ID –∫–∞—Ä—Ç–æ—á–∫–∏ –∏ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.")
        return

    card_id, new_status = data[0], data[1]
    response = requests.put(f"{config.TRELLO_API_URL}/update_card", json={"id": card_id, "status": new_status})
    if response.status_code == 200:
        logger.info(f"üìå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ Trello {card_id} –æ—Ç {message.from_user.id}")
        await message.answer(f"‚úÖ –ö–∞—Ä—Ç–æ—á–∫–∞ {card_id} –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ —Å—Ç–∞—Ç—É—Å–∞ **{new_status}**.")
    else:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏: {response.text}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏.")

