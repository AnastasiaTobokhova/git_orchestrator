import asyncio
import logging
from datetime import datetime
from aiogram import Bot, Dispatcher, Router, types
from aiogram.filters import Command
from config import config, logger
from bot_handlers import routers

# –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
logger.info("üöÄ Telegram Bot –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=config.BOT_TOKEN)
dp = Dispatcher()

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑ bot_handlers
for router in routers:
    dp.include_router(router)

# –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π router –¥–ª—è –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
auto_delete_router = Router()
dp.include_router(auto_delete_router)  # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —ç—Ç–æ—Ç router

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
user_messages = {}  # –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
last_activity = {}  # –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è

async def delete_all_messages(user_id: int, bot: Bot):
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω 30 –º–∏–Ω—É—Ç."""
    if user_id in user_messages:
        for msg_id in user_messages[user_id]:
            try:
                await bot.delete_message(chat_id=user_id, message_id=msg_id)
            except Exception:
                pass  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ
        user_messages[user_id] = []  # –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫
        logger.info(f"üóëÔ∏è –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} —É–¥–∞–ª–µ–Ω—ã –∏–∑ —á–∞—Ç–∞.")

async def schedule_message_cleanup(user_id: int, bot: Bot):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–∞–π–º–µ—Ä –Ω–∞ 30 –º–∏–Ω—É—Ç –∏ —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω."""
    await asyncio.sleep(1800)  # –ñ–¥—ë–º 30 –º–∏–Ω—É—Ç (1800 —Å–µ–∫—É–Ω–¥)
    now = datetime.now()
    
    if user_id in last_activity and (now - last_activity[user_id]).seconds >= 1800:
        await delete_all_messages(user_id, bot)  # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è

@auto_delete_router.message()
async def handle_message(message: types.Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Ö –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ç–∞–π–º–µ—Ä."""
    user_id = message.from_user.id
    now = datetime.now()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏–π, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –±–æ—Ç–æ–º
    if user_id not in user_messages:
        user_messages[user_id] = []
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    sent_message = await message.answer("–í–∞—à–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞ (—á—Ç–æ–±—ã –Ω–µ —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
    user_messages[user_id].append(sent_message.message_id)

    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    last_activity[user_id] = now

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä —É–¥–∞–ª–µ–Ω–∏—è (–Ω–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
    if len(user_messages[user_id]) == 1:  
        asyncio.create_task(schedule_message_cleanup(user_id, message.bot))

async def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    logger.info("‚úÖ Telegram Bot —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    await dp.start_polling(bot)

if __name__ == "__main__":
    try:
        asyncio.run(main())  # –ó–∞–ø—É—Å–∫–∞–µ–º asyncio loop –ø—Ä–∞–≤–∏–ª—å–Ω–æ
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}")



